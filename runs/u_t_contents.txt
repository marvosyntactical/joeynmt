<built-in method with_traceback of PicklingError object at 0x7f5f95b18a08>
<built-in method with_traceback of PicklingError object at 0x7f5f95b18a08>
encoder.output_size:  60
batch.kbsrc:  (tensor([[   0,    3,    1,    1,    1,    1],
        [ 814,  581,    1, 2194,    3,    1],
        [ 814,  581,    1,    0,    3,    1],
        [ 814,  581,    1,    0,    3,    1],
        [ 814,  581,    1,  259,    3,    1],
        [ 523,  840,  581,    1, 2194,    3],
        [ 523,  840,  581,    1,    0,    3],
        [ 523,  840,  581,    1,    0,    3],
        [ 523,  840,  581,    1,  259,    3],
        [1268,  863,    1, 2194,    3,    1],
        [1268,  863,    1,    0,    3,    1],
        [1268,  863,    1,    0,    3,    1],
        [1268,  863,    1,  259,    3,    1],
        [   4,  908,    1, 2194,    3,    1],
        [   4,  908,    1,    0,    3,    1],
        [   4,  908,    1,    0,    3,    1],
        [   4,  908,    1,  259,    3,    1],
        [1688,  720,    1, 2194,    3,    1],
        [1688,  720,    1,    0,    3,    1],
        [1688,  720,    1,    0,    3,    1],
        [1688,  720,    1,  259,    3,    1],
        [ 554,  718,    1, 2194,    3,    1],
        [ 554,  718,    1,    0,    3,    1],
        [ 554,  718,    1,    0,    3,    1],
        [ 554,  718,    1,  259,    3,    1],
        [ 982,    1, 2194,    3,    1,    1],
        [ 982,    1,    0,    3,    1,    1],
        [ 982,    1,    0,    3,    1,    1],
        [ 982,    1,  259,    3,    1,    1],
        [ 781,  901,    1, 2194,    3,    1],
        [ 781,  901,    1,    0,    3,    1],
        [ 781,  901,    1,    0,    3,    1],
        [ 781,  901,    1,  259,    3,    1]]), tensor([2, 5, 5, 5, 5, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 4, 4, 4, 4, 5, 5, 5, 5])) <class 'tuple'>
batch.kbtrg:  (tensor([[  2,   0,   3],
        [  2, 335,   3],
        [  2, 337,   3],
        [  2, 336,   3],
        [  2, 334,   3],
        [  2, 505,   3],
        [  2, 507,   3],
        [  2, 506,   3],
        [  2, 504,   3],
        [  2, 709,   3],
        [  2, 711,   3],
        [  2, 710,   3],
        [  2, 708,   3],
        [  2, 479,   3],
        [  2, 481,   3],
        [  2, 480,   3],
        [  2, 478,   3],
        [  2, 348,   3],
        [  2, 350,   3],
        [  2, 349,   3],
        [  2, 347,   3],
        [  2, 323,   3],
        [  2, 325,   3],
        [  2, 324,   3],
        [  2, 322,   3],
        [  2, 528,   3],
        [  2, 530,   3],
        [  2, 529,   3],
        [  2, 527,   3],
        [  2, 392,   3],
        [  2, 394,   3],
        [  2, 393,   3],
        [  2, 391,   3]]), tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3])) <class 'tuple'>
kb_keys.shape:torch.Size([1, 33, 16])
kb_values.shape:torch.Size([1, 33])
debug: dir(batch):['kbsrc', 'kbtrg', 'kbtrv', 'src', 'src_lengths', 'src_mask', 'trg', 'trg_input', 'trg_lengths', 'trg_mask']
debug: batch.src.shape:torch.Size([3, 71])
debug: batch.trg.shape:torch.Size([3, 26])
tensor([[   0,    4,  339,  581,  556,    3,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],
        [   0,    4,  339,  581,  556,    0,    4,  339,  581,  556,    5,  814,
          581,    8,  938,  630,  525,   31,    6,   33,  491,  564,    0,  737,
          819,   40,  491, 2648,   13,   41,  312,    0,  702,  313,   38,  648,
         1654,    3,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],
        [   0,    4,  339,  581,  556,    0,    4,  339,  581,  556,    5,  814,
          581,    8,  938,  630,  525,   31,    6,   33,  491,  564,    0,  737,
          819,   40,  491, 2648,   13,   41,  312,    0,  702,  313,   38,  648,
         1654,    0,   23, 1298,   33,   17,    5,   13,  596,  615,  990, 1255,
            7,    4,   41,  255,   18,   22, 1006,  742,    4,  584,   41,    9,
          938,  630,  525,    0,    0,  841, 2408,   21,   14,  613,    3]])
debug: batch.kbtrv.shape:torch.Size([33, 11])
debug: batch.kbtrv:tensor([[2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 0, 3, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 0, 3, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1],
        [2, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1]])
decoder.forward() unroll_steps in model.forward
is 26, which is 1st dim of trg_input=torch.Size([3, 26])
att debug: u_t.shape=torch.Size([3, 1, 33])
u_t contents:tensor([[[-0.0166, -0.1129, -0.2478, -0.2478, -0.0505, -0.1099, -0.2418,
          -0.2418, -0.0489,  0.1025, -0.0354, -0.0354,  0.1643,  0.1013,
          -0.0359, -0.0359,  0.1638,  0.3156,  0.1857,  0.1857,  0.3799,
           0.1314, -0.0110, -0.0110,  0.1935,  0.1148, -0.0239, -0.0239,
           0.1778, -0.0291, -0.1602, -0.1602,  0.0312]],

        [[ 0.1308,  0.0081, -0.1123, -0.1123,  0.0703,  0.0229, -0.0992,
          -0.0992,  0.0851,  0.2267,  0.1101,  0.1101,  0.2894,  0.2332,
           0.1117,  0.1117,  0.2927,  0.4130,  0.3079,  0.3079,  0.4797,
           0.2598,  0.1334,  0.1334,  0.3224,  0.2405,  0.1178,  0.1178,
           0.3031,  0.1135, -0.0022, -0.0022,  0.1694]],

        [[-0.0129, -0.1177, -0.2408, -0.2408, -0.0663, -0.0969, -0.2200,
          -0.2200, -0.0471,  0.0872, -0.0351, -0.0351,  0.1408,  0.1002,
          -0.0242, -0.0242,  0.1539,  0.2712,  0.1585,  0.1585,  0.3361,
           0.1099, -0.0211, -0.0211,  0.1673,  0.0959, -0.0282, -0.0282,
           0.1544, -0.0058, -0.1245, -0.1245,  0.0403]]],
       grad_fn=<UnsqueezeBackward0>)
